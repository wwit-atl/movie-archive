#!/usr/bin/env ruby

require 'fileutils'
require 'wwit/archive'

# Don't do anything if we're only including this file's classes
# return unless __FILE__ == $0

opt = WWIT::Archive::Options.parse(ARGV)

if opt.verbose
  puts "Source directories are #{opt.source.join(', ')}"
  puts "Destination directory is #{opt.dest ? opt.dest : 'determined by source file'}"
  puts "We'll be working on files older than #{opt.days} day#{opt.days > 1 ? 's' : ''}" if opt.days > 0
end

puts "\nHey! DRYRUN is enabled, so no filesystem changes will be made." if opt.dryrun

# Create our movies object -- which, in turn, contains each movie file in the given source dir(s)
movies = WWIT::Archive::Movies.new( opt.source, debug: opt.debug )

if movies.empty?
  puts 'Hmm, no movie files were found.  Check your source directories?' if opt.verbose
  exit
end

action = opt.copy ? 'copying' : 'moving'

if opt.verbose
  print "#{action} #{movies.count} files... "
  $stdout.flush
  puts if opt.verbose
end

# Today's datetime
today = Time.new
file_count = 0

# Process each movie file
movies.each do |movie|

  # Make sure it's older than the days to keep
  days_old = ( (today - movie.birth) / 86400 )
  if days_old <= opt.days
    puts "Skipped #{movie}:  Too New (#{days_old.to_i} days old)" if opt.verbose
    next
  end

  dest = opt.dest || movie.dir
  newfile = movie.newfilename( dest )

  puts "#{action} #{movie.fullpath} -> #{newfile} ( #{movie.size_to_s} )" if opt.debug

  # Skip further processing if --dryrun was given
  next if opt.dryrun

  if opt.copy
    movie.copy( dest, opt.debug )
    print "+ " if opt.verbose
  else
    movie.move( dest, opt.debug )
    print "> " if opt.verbose
  end
  $stdout.flush # Flush anything in the STDOUT buffer

  file_count += 1
end

puts "Complete - #{file_count} files #{opt.copy ? 'copied' : 'moved'}" if opt.verbose
exit( 0 )

